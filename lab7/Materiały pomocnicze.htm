<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1250">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Segoe UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:inherit;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-right:0cm;
	margin-left:0cm;
	font-size:18.0pt;
	font-family:"Times New Roman",serif;
	font-weight:bold;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-right:0cm;
	margin-left:0cm;
	font-size:13.5pt;
	font-family:"Times New Roman",serif;
	font-weight:bold;}
h6
	{mso-style-link:"Heading 6 Char";
	margin-right:0cm;
	margin-left:0cm;
	font-size:7.5pt;
	font-family:"Times New Roman",serif;
	font-weight:bold;}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;}
code
	{font-family:"Courier New";}
pre
	{mso-style-link:"HTML Preformatted Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Times New Roman",serif;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Times New Roman",serif;
	font-weight:bold;}
span.Heading6Char
	{mso-style-name:"Heading 6 Char";
	mso-style-link:"Heading 6";
	font-family:"Times New Roman",serif;
	font-weight:bold;}
span.HTMLPreformattedChar
	{mso-style-name:"HTML Preformatted Char";
	mso-style-link:"HTML Preformatted";
	font-family:"Courier New";}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=EN-US>

<div class=WordSection1>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:18.0pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>IPC:
pamiêæ wspólna, semafory - materia³y pomocnicze</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><i><span
style='font-size:7.5pt;font-family:"inherit",serif;color:#373A3C'>Uwaga:
podstawowe aspekty IPC Systemu V oraz POSIX, np. sposób tworzenia kluczy czy
identyfikacji obiektów, zosta³y ju¿ przedstawione w materia³ach pomocniczych do
æwiczenia 6. Nie bêd¹ one ponownie omawiane w niniejszym dokumencie.</span></i></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:18.0pt;font-family:"inherit",serif;color:#373A3C'>Semafory</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Semafory
s¹ jednym z najwa¿niejszych mechanizmów synchronizacji dostêpu do
wspó³dzielonych zasobów. Mo¿e na rozumieæ jako zmienne licznikowe dla których
zdefiniowane dwie&nbsp;<u>atomowe</u>&nbsp;operacje:</span></p>

<ul type=disc>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>Dekrementacja
     semafora: powoduje zmniejszenie jego semafora o 1, pod warunkiem ¿e
     wyjœciowa wartoœæ by³a &gt;0. Jeœli wyjœciowa wartoœæ semafora wynosi 0,
     dekrementacja powoduje zablokowanie wykonuj¹cego j¹ procesu. Proces bêdzie
     zablokowany do momentu zwiêkszenia wartoœci semafora (przez inny proces). Po
     odblokowaniu proces zmniejszy wartoœæ semafora o 1.</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>Inkrementacja
     semafora: powoduje zwiêkszenie wartoœci semafora o 1. Jeœli semafor
     blokuje jeden lub wiêcej procesów, zwiêkszenie jego wartoœci spowoduje
     odblokowanie jednego oczekuj¹cego procesu.</span></li>
</ul>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:13.5pt;font-family:"inherit",serif;color:#373A3C'>Semafory w
IPC systemu V.</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>W
systemie V semantyka semaforów jest rozszerzona w stosunku do klasycznej ich
definicji:</span></p>

<ol start=1 type=1>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>Semafory IPC
     systemu V mo¿na zmniejszaæ lub powiêkszaæ o wartoœci wiêksze ni¿ 1. Jednak
     po ka¿dej operacji wartoœæ semafora musi byæ &gt;=0. Operacja która
     narusza ten warunek jest blokowana. Blokada trwa do momentu, gdy wartoœæ
     semafora pozwoli wykonaæ operacjê z zachowaniem warunku wartoœci koñcowej
     &gt;=0.</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>W systemie V
     mo¿na wykonaæ operacje na wielu semaforach równoczeœnie. Operacje te
     wykonywane s¹ w sposób atomowy, tzn. wykonywane s¹ wszystkie wskazane
     operacje (jeœli jest to mo¿liwe) lub wszystkie wskazane operacje s¹
     blokowane (jeœli ze wzglêdu na aktualne wartoœci semaforów nie mo¿na
     wykonaæ wszystkich operacji na raz).</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>System V
     definiuje operacjê blokowania procesu do momentu, gdy semafor przyjmie
     wartoœæ 0.</span></li>
</ol>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Operacje
na semaforach systemu V s¹ zdefiniowane w pliku nag³ówkowym&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sys/sem.h</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;Dodatkowo
warto równie¿ do³¹czyæ pliki nag³ówkowe&nbsp;</span><span style='font-size:
10.0pt;font-family:Consolas;color:#E83E8C'>sys/ipc.h</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;i&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sys/types.h</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Aby
stworzyæ zbiór semaforów korzystamy z funkcji&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semget</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:Consolas;
color:#212529'>int semget(key_t key, int nsems, int flag);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta zwraca identyfikator zbioru semaforów, który mo¿na nastêpnie wykorzystaæ w
innych funkcjach operuj¹cych na semaforach. Argument&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>key</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;wskazuje
klucz zbioru semaforów, zaœ w argumencie&nbsp;</span><span style='font-size:
10.0pt;font-family:Consolas;color:#E83E8C'>flag</span><span style='font-size:
11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;przekazywane s¹
flagi modyfikuj¹ce proces tworzenia obiektu IPC (patrz materia³y do æwiczenia
6). Liczba semaforów do utworzenia przekazywana jest w argumencie&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>nsems</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcjê&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semget</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;mo¿na
równie¿ wykorzystaæ do pobrania identyfikatora istniej¹cego ju¿ zbioru
semaforów (np. utworzonego przez inny proces). Wówczas wartoœæ&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>nsems</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;powinna
wynosiæ 0. Bezpoœrednio po utworzeniu, wartoœci semaforów s¹ niezdefiniowane.
Nale¿y je zainicjalizowaæ, np. za pomoc¹ funkcji&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semctl</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;(patrz
poni¿ej).</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Do
wykonania operacji na zbiorze semaforów s³u¿y funkcja&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semop</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:Consolas;
color:#212529'>int semop(int semid, struct sembuf *sops, unsigned nsops);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta wykonuje operacje na zbiorze semaforów o identyfikatorze&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semid</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;Liczba
operacji do wykonania jest zdefiniowana w argumencie&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>nsops</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;Same
operacje przekazywane w tablicy&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>sops</span><span style='font-size:11.5pt;
font-family:"Courier New";color:#373A3C'>&nbsp;</span><span style='font-size:
11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>(zawieraj¹cej&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>nsops</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;elementów).
Ka¿da operacja zdefiniowana jest jako struktura postaci:</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>struct sembuf </span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>{</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>   unsigned short sem_num;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>   short sem_op;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>   short sem_flg;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>}; </span><span style='font-size:10.0pt;font-family:Consolas;
color:#212529'> </span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>gdzie:</span></p>

<ul type=disc>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_num</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;to numer
     semafora (w zbiorze) na którym nale¿y wykonaæ operacjê,</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_op</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;to
     operacje do wykonania,</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_flg</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;to flagi
     operacji.</span></li>
</ul>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Wartoœæ&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_op &lt; 0</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;oznacza
operacjê zmniejszenia wartoœci semafora o&nbsp;</span><span style='font-size:
10.0pt;font-family:Consolas;color:#E83E8C'>sem_op</span><span style='font-size:
11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;Wartoœæ&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_op &gt; 0</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;oznacza
operacjê zwiêkszenia wartoœci semafora o&nbsp;</span><span style='font-size:
10.0pt;font-family:Consolas;color:#E83E8C'>sem_op</span><span style='font-size:
11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp; Wartoœæ&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_op == 0</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;oznacza
operacjê oczekiwania, a¿ wartoœæ semafora bêdzie wynosiæ 0. Dla pola&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_flg</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;zdefiniowano
dwie istotne flagi: flaga&nbsp;</span><span style='font-size:10.0pt;font-family:
Consolas;color:#E83E8C'>IPC_NOWAIT</span><span style='font-size:11.5pt;
font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;oznacza, i¿ operacja nie
powinna blokowaæ procesu. Jeœli operacji nie mo¿na wykonaæ (ze wzglêdu na
wartoœæ semafora) i ustawiona jest flaga&nbsp;</span><span style='font-size:
10.0pt;font-family:Consolas;color:#E83E8C'>IPC_NOWAIT</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>,
funkcja&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>semop</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>&nbsp;zwróci b³¹d. Flaga&nbsp;</span><span style='font-size:
10.0pt;font-family:Consolas;color:#E83E8C'>SEM_UNDO</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>oznacza,
¿e w przypadku zakoñczenia procesu operacja wykonana na semaforze powinna
zostaæ cofniêta.</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Na
koniec warto równie¿ zwróciæ uwagê na funkcjê&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semctl</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>,
która pozwalaj¹cej wykonaæ pewne dodatkowe operacje na zbiorze semaforów.
Funkcja ta ma sygnaturê:</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:Consolas;
color:#212529'>int semctl(int semid, int semnum, int cmd, union semun arg);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>gdzie:</span></p>

<ul type=disc>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semid</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;to
     identyfikator zbioru semaforów,</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semnum</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;to numer
     semafora w zbiorze,</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>cmd</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;to
     operacja do wykonania,</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>arg</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;to unia
     bitowa przekazuj¹ca pewne dodatkowe argumenty.</span></li>
</ul>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semctl</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;pozwala
wykonaæ szereg operacji na semaforze, z który najistotniejszymi s¹:</span></p>

<ul type=disc>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>SETVAL</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;ustawienie
     wartoœci semafora na liczbê przekazan¹ w polu&nbsp;</span><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>arg.val</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>GETVAL</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;pobranie
     wartoœci semafora,</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>IPC_RMID</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;usuniêcie
     zbioru semaforów z systemu.</span></li>
</ul>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:13.5pt;font-family:"inherit",serif;color:#373A3C'>Semafory w
IPC POSIX.</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Semafory
POSIXa realizuj¹ klasyczn¹ semantykê semaforów. Aby z nich korzystaæ do
programu nale¿y do³¹czyæ pliki nag³ówkowe:&nbsp;</span><span style='font-size:
10.0pt;font-family:Consolas;color:#E83E8C'>semaphore.h</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>,&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sys/stat.h</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;oraz&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>fcntl.h</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;Ponadto
program nale¿y zlinkowaæ z bibliotek¹&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>pthread</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Do
utworzenia semafora s³u¿y funkcja&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>sem_open</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>sem_t *sem_open(const char *name, int oflag, mode_t mode,
unsigned int value);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta zwraca adres semafora lub&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>SEM_FAILED</span><span style='font-size:
11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;w przypadku
wyst¹pienia b³êdu. Argument&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>name</span><span style='font-size:11.5pt;
font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;okreœla nazwê semafora,
zaœ argument&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>oflag</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>&nbsp;okreœla tryb otwarcia (patrz materia³y do æwiczenia 6).
Argument&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>value</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>&nbsp;okreœla pocz¹tkow¹ wartoœæ semafora. Inkrementacjê
semafora (o wartoœæ 1) realizuje funkcja&nbsp;</span><span style='font-size:
10.0pt;font-family:Consolas;color:#E83E8C'>sem_post</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>int sem_post(sem_t *sem);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta przyjmuje wskaŸnik na semafor i zwraca 0 w przypadku sukcesu oraz -1 w
przypadku wyst¹pienia b³êdu. Dekrementacja semafora realizowana jest
analogicznie zdefiniowan¹ funkcj¹&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>sem_wait</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>int *sem_wait(sem_t *sem);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta posiada równie¿ wariant nieblokuj¹cy</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>sem_trywait</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>int *sem_trywait(sem_t *sem);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Jeœli
dekrementacja semafora nie jest mo¿liwa (semafor ma wartoœæ 0) funkcja&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_trywait</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;nie
blokuje procesu, lecz zwraca wartoœæ -1 i ustawia zmienn¹&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>errno</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;na&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>EAGAIN</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>.<br>
POSIX pozwala równie¿ odczytaæ aktualn¹ wartoœæ semafora. S³u¿y do tego
funkcja&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>sem_getvalue</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>int sem_getvalue(sem_t *sem, int *valp);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Aktualna
wartoœæ semafora zapisywana jest pod adresem wskazywanym przez argument&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>valp</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'><br>
Po zakoñczeniu pracy z semaforem nale¿y go zamkn¹æ. S³u¿y do tego funkcja&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_close</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>int sem_close(sem_t *sem);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcje&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_getvalue</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;oraz&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sem_close</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;zwracaj¹
0 w przypadku sukcesu oraz -1 w przypadku wyst¹pienia b³êdu.</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:18.0pt;font-family:"inherit",serif;color:#373A3C'>Pamiêæ
wspólna</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Co do
zasady, ka¿dy proces w systemie posiada odrêbn¹ wirtualn¹ przestrzeñ adresow¹.
Zmiany zawartoœci pamiêci dokonywane przez jeden proces nie s¹ widoczne w
innych procesach. Mechanizm pamiêci wspólnej stanowi wyj¹tek od tej zasady -
umo¿liwia pod³¹czenie segmentu pamiêci do przestrzeni adresowej wielu procesów.
Pozwala to na komunikacjê miêdzy procesami bez koniecznoœci dodatkowego
kopiowania danych. Mechanizm ten nie zapewnia jednak ¿adnej synchronizacji
dostêpu do wspólnej pamiêci. Z regu³y konieczne wiêc bêdzie wykorzystanie
dodatkowych mechanizmów synchronizacji (np. semaforów) aby zapewniæ prawid³ow¹
sekwencjê odczytów/zapisów z/do pamiêci wspólnej.</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:13.5pt;font-family:"inherit",serif;color:#373A3C'>Pamiêæ
wspólna w IPC systemu V.</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>W IPC
systemu V operacje na pamiêci wspólnej s¹ zdefiniowane w pliku
nag³ówkowym&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>sys/shm.h</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>&nbsp;Dodatkowo warto równie¿ do³¹czyæ pliki nag³ówkowe&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sys/ipc.h</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;oraz&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>sys/types.h</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Aby
stworzyæ segment pamiêci wspólnej korzystamy z funkcji&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>shmget</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:Consolas;
color:#212529'>int shmget(key_t key, size_t size, int shmflg); </span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta zwraca identyfikator segmentu pamiêci wspólnej. Argument&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>key</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;oznacza
klucz segmentu pamiêci wspólnej a argument&nbsp;</span><span style='font-size:
10.0pt;font-family:Consolas;color:#E83E8C'>flag</span><span style='font-size:
11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;przekazuje flagi
modyfikuj¹ce proces tworzenia obiektu IPC (patrz materia³y do æwiczenia 6).
Rozmiar segmentu pamiêci wspólnej przekazywany jest w argumencie&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>size</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;Funkcja
ta pozwala równie¿ uzyskaæ identyfikator istniej¹cego ju¿ segmentu pamiêci
wspólnej. Wówczas argument&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>size</span><span style='font-size:11.5pt;
font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;powinien mieæ wartoœæ 0.
Do³¹czenie segmentu pamiêci wspólnej do przestrzeni adresowej procesu realizuje
funkcja&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>shmat</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:Consolas;
color:#212529'>void *shmat(int shmid, const void *shmaddr, int shmflg);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta zwraca adres pod którym do³¹czono segment pamiêci wspólnej. W przypadku
b³êdu zwracana jest wartoœæ&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>(void *) -1</span><span style='font-size:
11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>. W argumencie&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>semid</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;przekazywany
jest identyfikator segmentu. Argument&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>shmaddr</span><span style='font-size:11.5pt;
font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;pozwala wskazaæ adres,
pod którym system powinien do³¹czyæ segment pamiêci wspólnej. Zaleca siê by
mia³ on wartoœæ&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>NULL</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>, oznaczaj¹c¹, ¿e system operacyjny sam dobierze odpowiedni
adres. W argumencie&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>shmflg</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>&nbsp;przekazywane s¹ flagi modyfikuj¹ce dzia³anie funkcji&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>shmat</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;Najciekawsz¹
z nich jest flaga&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>SHM_RDONLY</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>, pozwalaj¹ca do³¹czyæ segment pamiêci w trybie tylko do
odczytu. Po zakoñczeniu pracy z segmentem nale¿y go od³¹czyæ, korzystaj¹c z
funkcji&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>shmdt</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:Consolas;
color:#212529'>int shmdt(const void *shmaddr);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta przyjmuje w argumencie adres zwrócony przez funkcjê&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>shmat</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;i
zwraca 0 w przypadku powodzenia oraz -1 w przypadku b³êdu. Na koniec warto
równie¿ wspomnieæ o funkcji&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>shmctl</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:Consolas;
color:#212529'>void *shmctl(int shmid, int cmd, struct shmid_ds *buf);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Pozwala
ona, miêdzy innymi, usun¹æ segment pamiêci wspólnej z systemu. W tym celu
nale¿y j¹ wywo³aæ przekazuj¹c jako drugi argument polecenie&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>IPC_RMID</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;(argument&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>buf</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;jest
wówczas ignorowany). Po wykonaniu tego polecenia nie bêdzie mo¿liwe do³¹czenie
segmentu do kolejnych procesów. Segment zostanie usuniêty po od³¹czeniu przez
wszystkie procesy, które uprzednio do³¹czy³y go do swojej przestrzeni
adresowej.</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:13.5pt;font-family:"inherit",serif;color:#373A3C'>Pamiêæ
wspólna w IPC POSIX.</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Aby
korzystaæ z pamiêci wspólnej w IPC POSIX do programu nale¿y do³¹czyæ pliki
nag³ówkowe:&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>sys/mman.h</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>,&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>sys/stat.h</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>&nbsp;oraz&nbsp;</span><span style='font-size:10.0pt;font-family:
Consolas;color:#E83E8C'>fcntl.h</span><span style='font-size:11.5pt;font-family:
"Segoe UI",sans-serif;color:#373A3C'>&nbsp;Ponadto program nale¿y zlinkowaæ z
bibliotek¹&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>rt</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Do
utworzenia segmentu pamiêci wspólnej (lub otwarcia istniej¹cego ju¿ segmentu)
s³u¿y funkcja&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>shm_open</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>int shm_open(const char *name, int oflag, mode_t mode);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta zwraca deskryptor plików reprezentuj¹cy segment pamiêci wspólnej. W
przypadku b³êdu zwracana jest wartoœæ -1. Argument&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>name</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;okreœla
nazwê segmentu, zaœ argument&nbsp;</span><span style='font-size:10.0pt;
font-family:Consolas;color:#E83E8C'>oflag</span><span style='font-size:11.5pt;
font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;okreœla tryb otwarcia
(patrz materia³y do æwiczenia 6). Po utworzeniu segmentu nale¿y okreœliæ jego
rozmiar. W tym celu nale¿y skorzystaæ z funkcji&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>ftruncate</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>int ftruncate(int fd, off_t length);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>W
pierwszym argumencie przekazywany jest deskryptor zwrócony przez funkcjê&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>shm_open</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>. W
drugim argumencie przekazywany jest po¿¹dany rozmiar segmentu (w bajtach).
Funkcja ta zwraca 0 w przypadku powodzenia oraz -1 w przypadku wyst¹pienia
b³êdu. Otwarty segment pamiêci wspólnej nale¿y do³¹czyæ do przestrzeni
adresowej procesu. Operacjê t¹ mo¿na zrealizowaæ za pomoc¹ funkcji&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>mmap</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>void *mmap(void *addr, size_t len, int prot, int flags, int fd,
off_t offset);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Funkcja
ta zwraca adres do³¹czonego segmentu lub, w przypadku b³êdu, wartoœæ&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>(void *) -1</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>. W
argumentach przekazywane s¹:</span></p>

<ul type=disc>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>addr</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;okreœla
     adres pod którym powinien zostaæ do³¹czony segment pamiêci wspólnej;
     zaleca siê przekazanie wartoœci&nbsp;</span><span style='font-size:10.0pt;
     font-family:Consolas;color:#E83E8C'>NULL</span><span style='font-size:
     11.5pt;font-family:"Segoe UI",sans-serif'>, wskazuj¹cej, ¿e system sam
     powinien dobraæ odpowiedni adres,</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>len</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;to liczba
     bajtów segmentu mapowanych do przestrzeni adresowej procesu,</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>prot</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;okreœla
     prawa dostêpu do mapowanej pamiêci; prawa te s¹ okreœlane flagami&nbsp;</span><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>PROT_READ</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;(odczyt),&nbsp;</span><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>PROT_WRITE</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>(zapis),</span><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>PROT_EXEC</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;(prawo
     wykonania),&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
     color:#E83E8C'>PROT_NONE</span><span style='font-size:11.5pt;font-family:
     "Segoe UI",sans-serif'>&nbsp;(brak uprawnieñ),</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>flags -
     specyfikacja u¿ycia segmentu (np. MAP_SHARED, MAP_PRIVATE, MAP_FIXED)</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>fd</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;jest
     deskryptorem plików zwróconym przez funkcjê&nbsp;</span><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>shm_open</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>,</span></li>
 <li class=MsoNormal style='color:#373A3C;line-height:normal;background:white'><span
     style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>offset</span><span
     style='font-size:11.5pt;font-family:"Segoe UI",sans-serif'>&nbsp;okreœla
     przesuniêcie mapowanego obszaru wzglêdem pocz¹tku segmentu pamiêci
     wspólnej; z regu³y przyjmuje wartoœæ 0.</span></li>
</ul>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>Po
zakoñczeniu pracy z segmentem pamiêci wspólnej nale¿y go od³¹czyæ od
przestrzeni adresowej procesu. S³u¿y do tego funkcja&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>munmap</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>int munmap(void *addr, size_t len);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>W
argumencie&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>addr</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>&nbsp;nale¿y przekazaæ adres, pod którym segment zosta³
do³¹czony a w argumencie&nbsp;</span><span style='font-size:10.0pt;font-family:
Consolas;color:#E83E8C'>len</span><span style='font-size:11.5pt;font-family:
"Segoe UI",sans-serif;color:#373A3C'>&nbsp;rozmiar segmentu. Od³¹czony segment
mo¿na nastêpnie oznaczyæ do usuniêcia. S³u¿y do tego funkcja&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>shm_unlink</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'><span style='font-size:10.0pt;font-family:"Courier New";
color:#212529'>int shm_unlink(const char *name);</span></p>

<p class=MsoNormal style='line-height:normal;background:white'><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>W
argumencie&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>name</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>&nbsp;przekazywana jest nazwa segmentu do usuniêcia. Po
wykonaniu funkcji&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>shm_unlink</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>&nbsp;nie bêdzie ju¿ mo¿liwe otwarcie tego segmentu
funkcj¹&nbsp;</span><span style='font-size:10.0pt;font-family:Consolas;
color:#E83E8C'>shm_open</span><span style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;
color:#373A3C'>. Co wiêcej, po od³¹czeniu go przez wszystkie procesy, które
uprzednio do³¹czy³y go do swojej przestrzeni adresowej, zostanie on usuniêty z
zasobów systemu. Funkcje&nbsp;</span><span style='font-size:10.0pt;font-family:
Consolas;color:#E83E8C'>munmap</span><span style='font-size:11.5pt;font-family:
"Segoe UI",sans-serif;color:#373A3C'>&nbsp;i&nbsp;</span><span
style='font-size:10.0pt;font-family:Consolas;color:#E83E8C'>shm_unlink</span><span
style='font-size:11.5pt;font-family:"Segoe UI",sans-serif;color:#373A3C'>&nbsp;zwracaj¹
0 w przypadku powodzenia oraz -1 w przypadku b³êdu.</span></p>

<p class=MsoNormal><span lang=PL>&nbsp;</span></p>

</div>

</body>

</html>
